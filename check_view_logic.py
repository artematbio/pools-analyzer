#!/usr/bin/env python3
from database_handler import SupabaseHandler

def check_view_logic():
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Supabase —á–µ—Ä–µ–∑ handler
    supabase_handler = SupabaseHandler()
    
    if not supabase_handler.is_connected():
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Supabase")
        return
    
    print('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ')
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ view bio dao lp support
    print('üîç –ò—â–µ–º view "bio dao lp support"...')
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ views
    try:
        result = supabase_handler.client.rpc('get_views').execute()
        print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ views: {result.data}")
    except:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ views")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –µ—Å—Ç—å –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –∏–ª–∏ view —Å –ø–æ—Ö–æ–∂–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
    tables_to_check = [
        'bio_dao_lp_support',
        'dao_lp_support', 
        'dao_pools_dashboard',
        'bio_pair_support'
    ]
    
    for table_name in tables_to_check:
        try:
            print(f'\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º {table_name}...')
            result = supabase_handler.client.table(table_name).select('*').limit(3).execute()
            print(f'‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞/view {table_name} —Å {len(result.data)} –∑–∞–ø–∏—Å—è–º–∏')
            if result.data:
                print(f'–ö–æ–ª–æ–Ω–∫–∏: {list(result.data[0].keys())}')
        except Exception as e:
            print(f'‚ùå {table_name} –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}')
    
    # –ü—Ä—è–º–æ–π SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ view logic
    print('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –∫–∞–∫ –≤ view...')
    
    # –≠–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—É—é –ª–æ–≥–∏–∫—É view
    query = """
    SELECT 
        token_symbol,
        network,
        token_fdv_usd,
        pool_name,
        created_at,
        ROW_NUMBER() OVER (
            PARTITION BY token_symbol, network, pool_address 
            ORDER BY created_at DESC
        ) as rn
    FROM dao_pool_snapshots 
    WHERE 
        token_fdv_usd > 0 
        AND token_symbol IN ('ATH', 'CRYO', 'GROW', 'NEURON')
        AND created_at >= '2025-07-30T00:00:00Z'
    """
    
    try:
        result = supabase_handler.client.rpc('exec_sql', {'query': query}).execute()
        print(f"SQL —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result.data}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ SQL: {e}")
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ - —Ä—É—á–Ω–æ–π –∑–∞–ø—Ä–æ—Å
        print('\nüîç –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...')
        for token in ['ATH', 'CRYO', 'GROW', 'NEURON']:
            result = supabase_handler.client.table('dao_pool_snapshots').select(
                'token_symbol, network, token_fdv_usd, pool_name, created_at'
            ).eq('token_symbol', token).gt('token_fdv_usd', 0).gte(
                'created_at', '2025-07-30T00:00:00Z'
            ).order('created_at', desc=True).execute()
            
            print(f'\n{token} - –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:')
            for record in result.data[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f'  {record["network"]}: FDV ${record["token_fdv_usd"]:,.0f} - {record["created_at"][:16]}')

if __name__ == '__main__':
    check_view_logic() 