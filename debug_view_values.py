#!/usr/bin/env python3

import os
from supabase import create_client, Client
from datetime import datetime, timedelta

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase
url = os.getenv("SUPABASE_URL")
key = os.getenv("SUPABASE_KEY")
supabase: Client = create_client(url, key)

def debug_view_values():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π –≤ bio_dao_lp_support view"""
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê VIEW bio_dao_lp_support")
    print("=====================================")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º view –Ω–∞–ø—Ä—è–º—É—é
    print("\n1Ô∏è‚É£ –¢–ï–ö–£–©–ò–ï –ó–ù–ê–ß–ï–ù–ò–Ø –í VIEW:")
    view_result = supabase.table('bio_dao_lp_support').select('*').execute()
    
    if view_result.data:
        for row in view_result.data:
            pool_name = row.get('pool_name', 'N/A')
            our_pos = row.get('our_position_value_usd', 0)
            target = row.get('target_lp_value_usd', 0)
            gap = row.get('lp_gap_usd', 0)
            
            print(f"   üèä {pool_name}")
            print(f"      Our Position: ${our_pos:,.2f}")
            print(f"      Target: ${target:,.2f}")
            print(f"      Gap: ${gap:,.2f}")
            print()
    else:
        print("   ‚ùå View –ø—É—Å—Ç–æ–π!")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ lp_position_snapshots
    print("\n2Ô∏è‚É£ –ò–°–•–û–î–ù–´–ï –î–ê–ù–ù–´–ï –í lp_position_snapshots:")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–µ –ø–æ–∑–∏—Ü–∏–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –¥–Ω—è)
    two_days_ago = (datetime.now() - timedelta(days=2)).strftime('%Y-%m-%d')
    
    positions_result = supabase.table('lp_position_snapshots').select(
        'pool_id, pool_name, network, position_value_usd, created_at'
    ).gte('created_at', two_days_ago).order('created_at', desc=True).execute()
    
    print(f"   üìä –ù–∞–π–¥–µ–Ω–æ {len(positions_result.data)} –ø–æ–∑–∏—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –¥–Ω—è")
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –ø—É–ª–∞–º
    pool_positions = {}
    for pos in positions_result.data:
        pool_key = f"{pos['pool_id']}_{pos['network']}"
        pool_name = pos.get('pool_name', 'N/A')
        value = float(pos.get('position_value_usd', 0))
        
        if pool_key not in pool_positions:
            pool_positions[pool_key] = {
                'pool_name': pool_name,
                'network': pos['network'],
                'positions': [],
                'total_value': 0
            }
        
        pool_positions[pool_key]['positions'].append({
            'value': value,
            'created_at': pos['created_at']
        })
        pool_positions[pool_key]['total_value'] += value
    
    print("\n   üìã –ì–†–£–ü–ü–ò–†–û–í–ö–ê –ü–û –ü–£–õ–ê–ú:")
    for pool_key, data in pool_positions.items():
        if data['total_value'] > 0:  # –¢–æ–ª—å–∫–æ –ø—É–ª—ã —Å –ø–æ–∑–∏—Ü–∏—è–º–∏
            print(f"      üéØ {data['pool_name']} ({data['network']})")
            print(f"         Pool Key: {pool_key}")
            print(f"         –ü–æ–∑–∏—Ü–∏–π: {len(data['positions'])}")
            print(f"         –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${data['total_value']:,.2f}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏
            for i, pos in enumerate(data['positions'][:3]):  # –ü–µ—Ä–≤—ã–µ 3
                print(f"           {i+1}. ${pos['value']:,.2f} ({pos['created_at']})")
            
            if len(data['positions']) > 3:
                print(f"           ... –∏ –µ—â–µ {len(data['positions']) - 3} –ø–æ–∑–∏—Ü–∏–π")
            print()
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º dao_pool_snapshots
    print("\n3Ô∏è‚É£ –î–ê–ù–ù–´–ï –í dao_pool_snapshots:")
    
    dao_result = supabase.table('dao_pool_snapshots').select(
        'pool_address, pool_name, network, our_position_value_usd, target_lp_value_usd, lp_gap_usd, created_at'
    ).gte('created_at', two_days_ago).order('created_at', desc=True).execute()
    
    print(f"   üìä –ù–∞–π–¥–µ–Ω–æ {len(dao_result.data)} –∑–∞–ø–∏—Å–µ–π –≤ dao_pool_snapshots")
    
    for row in dao_result.data:
        pool_name = row.get('pool_name', 'N/A')
        our_pos = float(row.get('our_position_value_usd', 0))
        target = float(row.get('target_lp_value_usd', 0))
        gap = float(row.get('lp_gap_usd', 0))
        network = row.get('network', 'N/A')
        
        if our_pos > 1000000:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ (> $1M)
            print(f"   üö® –ü–†–û–ë–õ–ï–ú–ê: {pool_name} ({network})")
            print(f"      Our Position: ${our_pos:,.2f}")
            print(f"      Target: ${target:,.2f}")
            print(f"      Gap: ${gap:,.2f}")
            print(f"      Created: {row.get('created_at', 'N/A')}")
            print()
    
    # 4. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø—É–ª–æ–≤
    print("\n4Ô∏è‚É£ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–û–ù–ö–†–ï–¢–ù–´–• –ü–£–õ–û–í:")
    
    # –ò—â–µ–º –ø—É–ª—ã —Å –±–æ–ª—å—à–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –≤ dao_pool_snapshots
    problematic_pools = [row for row in dao_result.data if float(row.get('our_position_value_usd', 0)) > 1000000]
    
    for prob_pool in problematic_pools[:5]:  # –¢–æ–ø-5 –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö
        pool_name = prob_pool.get('pool_name', 'N/A')
        pool_addr = prob_pool.get('pool_address', 'N/A')
        network = prob_pool.get('network', 'N/A')
        
        print(f"   üîç –ê–ù–ê–õ–ò–ó: {pool_name}")
        print(f"      Pool Address: {pool_addr}")
        print(f"      Network: {network}")
        
        # –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–∑–∏—Ü–∏–∏
        pool_key_variants = [
            f"{pool_addr.lower()}_{network}",
            f"{pool_addr}_{network}",
            pool_addr.lower(),
            pool_addr
        ]
        
        found_positions = []
        for variant in pool_key_variants:
            if variant in pool_positions:
                found_positions = pool_positions[variant]['positions']
                print(f"      ‚úÖ –ù–∞–π–¥–µ–Ω—ã –ø–æ–∑–∏—Ü–∏–∏ –ø–æ –∫–ª—é—á—É: {variant}")
                break
        
        if found_positions:
            print(f"      üìä –ü–æ–∑–∏—Ü–∏–π –Ω–∞–π–¥–µ–Ω–æ: {len(found_positions)}")
            total = sum(pos['value'] for pos in found_positions)
            print(f"      üí∞ –†–µ–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: ${total:,.2f}")
        else:
            print(f"      ‚ùå –ü–æ–∑–∏—Ü–∏–∏ –ù–ï –ù–ê–ô–î–ï–ù–´!")
            print(f"      üîç –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∫–ª—é—á–∏:")
            for variant in pool_key_variants:
                print(f"         - {variant}")
        
        print()

if __name__ == "__main__":
    debug_view_values()
