const fs = require('fs');
const ethers = require('ethers');

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const POOL_ADDRESS = '0x08a5a1e2671839dadc25e2e20f9206fd33c88092'; // BIO/WETH pool
const BIO_TOKEN = '0xcb1592591996765ec0efc1f92599a19767ee5ffa';
const WETH_TOKEN = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';
const WETH_PRICE_USD = 3400; // –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Ü–µ–Ω–∞ WETH –¥–ª—è –æ—Ü–µ–Ω–∫–∏

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
const ALCHEMY_KEY = process.env.ALCHEMY_API_KEY || 'Hkg1Oi9c8x3JEiXj2cL62';
const RPC_URL = `https://eth-mainnet.g.alchemy.com/v2/${ALCHEMY_KEY}`;
const provider = new ethers.JsonRpcProvider(RPC_URL);

// ABI –¥–ª—è Swap —Å–æ–±—ã—Ç–∏—è
const SWAP_EVENT_ABI = [
    "event Swap(address indexed sender, address indexed recipient, int256 amount0, int256 amount1, uint160 sqrtPriceX96, uint128 liquidity, int24 tick)"
];

async function analyzeSellPressure24h() {
    try {
        console.log('üöÄ –ê–Ω–∞–ª–∏–∑ Sell Pressure –¥–ª—è BIO —Ç–æ–∫–µ–Ω–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞)');
        console.log('==========================================================');
        console.log('');

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–ª–æ–∫
        const currentBlock = await provider.getBlockNumber();
        
        // 24 —á–∞—Å–∞ = 24 * 60 * 60 / 12 = 7200 –±–ª–æ–∫–æ–≤ (–ø—Ä–∏–º–µ—Ä–Ω–æ)
        const BLOCKS_24H = 7200;
        const fromBlock24h = currentBlock - BLOCKS_24H;

        console.log(`üìä –ë–ª–æ–∫–∏: ${fromBlock24h} ‚Üí ${currentBlock}`);
        console.log(`üìà –î–∏–∞–ø–∞–∑–æ–Ω: ${BLOCKS_24H} –±–ª–æ–∫–æ–≤ (24 —á–∞—Å–∞)`);
        console.log('');

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–∫–µ–Ω–∞—Ö –≤ –ø—É–ª–µ
        const poolContract = new ethers.Contract(POOL_ADDRESS, [
            "function token0() view returns (address)",
            "function token1() view returns (address)"
        ], provider);

        const token0 = await poolContract.token0();
        const token1 = await poolContract.token1();
        
        console.log(`üîç –¢–æ–∫–µ–Ω—ã –≤ –ø—É–ª–µ:`);
        console.log(`   Token0: ${token0}`);
        console.log(`   Token1: ${token1}`);
        
        const bioIsToken0 = token0.toLowerCase() === BIO_TOKEN.toLowerCase();
        console.log(`   BIO –ø–æ–∑–∏—Ü–∏—è: ${bioIsToken0 ? 'token0' : 'token1'}`);
        console.log('');

        // –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏ Swap —Å–æ–±—ã—Ç–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
        console.log(`üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö Swap —Å–æ–±—ã—Ç–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞...`);

        const filter = {
            address: POOL_ADDRESS,
            topics: [ethers.id("Swap(address,address,int256,int256,uint160,uint128,int24)")],
            fromBlock: fromBlock24h,
            toBlock: "latest"
        };

        const logs = await provider.getLogs(filter);
        console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: ${logs.length}`);
        console.log('');

        // –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
        const iface = new ethers.Interface(SWAP_EVENT_ABI);

        // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
        let totalBioSold = 0;    // BIO –ø—Ä–æ–¥–∞–Ω–æ (–∏–∑ –ø—É–ª–∞)
        let totalBioBought = 0;  // BIO –∫—É–ø–ª–µ–Ω–æ (–≤ –ø—É–ª)
        let totalWethFromSales = 0;   // WETH –ø–æ–ª—É—á–µ–Ω–æ –æ—Ç –ø—Ä–æ–¥–∞–∂ BIO
        let totalWethFromPurchases = 0; // WETH –ø–æ—Ç—Ä–∞—á–µ–Ω–æ –Ω–∞ –ø–æ–∫—É–ø–∫–∏ BIO
        
        let salesCount = 0;
        let purchasesCount = 0;

        console.log(`üîç –ê–Ω–∞–ª–∏–∑ ${logs.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞...`);

        for (let i = 0; i < logs.length; i++) {
            try {
                const log = logs[i];
                const decoded = iface.parseLog({
                    topics: log.topics,
                    data: log.data
                });

                const amount0 = decoded.args.amount0;
                const amount1 = decoded.args.amount1;

                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±–º–µ–Ω–∞ –¥–ª—è BIO
                let bioAmount, wethAmount, isBioSale;
                
                if (bioIsToken0) {
                    bioAmount = Math.abs(Number(ethers.formatEther(amount0)));
                    wethAmount = Math.abs(Number(ethers.formatEther(amount1)));
                    isBioSale = amount0 < 0n; // BIO –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –ø—É–ª–∞ (–ø—Ä–æ–¥–∞–∂–∞)
                } else {
                    bioAmount = Math.abs(Number(ethers.formatEther(amount1)));
                    wethAmount = Math.abs(Number(ethers.formatEther(amount0)));
                    isBioSale = amount1 < 0n; // BIO –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –ø—É–ª–∞ (–ø—Ä–æ–¥–∞–∂–∞)
                }

                if (isBioSale) {
                    // –ü—Ä–æ–¥–∞–∂–∞ BIO (BIO ‚Üí WETH)
                    totalBioSold += bioAmount;
                    totalWethFromSales += wethAmount;
                    salesCount++;
                } else {
                    // –ü–æ–∫—É–ø–∫–∞ BIO (WETH ‚Üí BIO)
                    totalBioBought += bioAmount;
                    totalWethFromPurchases += wethAmount;
                    purchasesCount++;
                }

                // –ü—Ä–æ–≥—Ä–µ—Å—Å
                if (i % 200 === 0 && i > 0) {
                    console.log(`   üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${i}/${logs.length} —Å–æ–±—ã—Ç–∏–π... (–ü—Ä–æ–¥–∞–∂–∏: ${salesCount}, –ü–æ–∫—É–ø–∫–∏: ${purchasesCount})`);
                }

            } catch (error) {
                console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–æ–≥–∞ ${i}: ${error.message}`);
            }
        }

        console.log('');
        console.log('üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê SELL PRESSURE (24 –ß–ê–°–ê)');
        console.log('===============================================');
        console.log('');
        
        console.log('üìâ –ü–†–û–î–ê–ñ–ò BIO:');
        console.log(`   ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π: ${salesCount.toLocaleString()}`);
        console.log(`   ‚Ä¢ –û–±—ä–µ–º BIO –ø—Ä–æ–¥–∞–Ω–æ: ${totalBioSold.toLocaleString()} BIO`);
        console.log(`   ‚Ä¢ –ü–æ–ª—É—á–µ–Ω–æ WETH: ${totalWethFromSales.toFixed(6)} WETH`);
        console.log(`   ‚Ä¢ –û—Ü–µ–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $${(totalWethFromSales * WETH_PRICE_USD).toLocaleString()}`);
        console.log('');
        
        console.log('üìà –ü–û–ö–£–ü–ö–ò BIO:');
        console.log(`   ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π: ${purchasesCount.toLocaleString()}`);
        console.log(`   ‚Ä¢ –û–±—ä–µ–º BIO –∫—É–ø–ª–µ–Ω–æ: ${totalBioBought.toLocaleString()} BIO`);
        console.log(`   ‚Ä¢ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ WETH: ${totalWethFromPurchases.toFixed(6)} WETH`);
        console.log(`   ‚Ä¢ –û—Ü–µ–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $${(totalWethFromPurchases * WETH_PRICE_USD).toLocaleString()}`);
        console.log('');

        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º sell pressure
        const netBioFlow = totalBioSold - totalBioBought;
        const netWethFlow = totalWethFromSales - totalWethFromPurchases;
        const netUsdFlow = netWethFlow * WETH_PRICE_USD;

        console.log('‚öñÔ∏è SELL PRESSURE (–ß–ò–°–¢–´–ô –ü–û–¢–û–ö –ó–ê 24 –ß–ê–°–ê):');
        console.log(`   ‚Ä¢ –ß–∏—Å—Ç—ã–π –ø–æ—Ç–æ–∫ BIO: ${netBioFlow > 0 ? '+' : ''}${netBioFlow.toLocaleString()} BIO`);
        console.log(`   ‚Ä¢ –ß–∏—Å—Ç—ã–π –ø–æ—Ç–æ–∫ WETH: ${netWethFlow > 0 ? '+' : ''}${netWethFlow.toFixed(6)} WETH`);
        console.log(`   ‚Ä¢ –û—Ü–µ–Ω–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${netUsdFlow > 0 ? '+' : ''}$${netUsdFlow.toLocaleString()}`);
        console.log('');

        if (netBioFlow > 0) {
            console.log('üî¥ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç sell pressure (–±–æ–ª—å—à–µ –ø—Ä–æ–¥–∞–∂)');
            const sellPressurePercent = ((netBioFlow / totalBioBought) * 100).toFixed(1);
            console.log(`   üìä –ò–∑–±—ã—Ç–æ–∫ –ø—Ä–æ–¥–∞–∂: ${sellPressurePercent}%`);
        } else if (netBioFlow < 0) {
            console.log('üü¢ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç buy pressure (–±–æ–ª—å—à–µ –ø–æ–∫—É–ø–æ–∫)');
            const buyPressurePercent = ((-netBioFlow / totalBioSold) * 100).toFixed(1);
            console.log(`   üìä –ò–∑–±—ã—Ç–æ–∫ –ø–æ–∫—É–ø–æ–∫: ${buyPressurePercent}%`);
        } else {
            console.log('üü° –†–ï–ó–£–õ–¨–¢–ê–¢: –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è');
        }

        console.log('');
        console.log('üìä –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
        console.log(`   ‚Ä¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π: ${(salesCount + purchasesCount).toLocaleString()}`);
        console.log(`   ‚Ä¢ –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏/–ø–æ–∫—É–ø–∫–∏: ${(salesCount / purchasesCount).toFixed(2)}`);
        console.log(`   ‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–¥–∞–∂–∏: ${(totalBioSold / salesCount).toLocaleString()} BIO`);
        console.log(`   ‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä –ø–æ–∫—É–ø–∫–∏: ${(totalBioBought / purchasesCount).toLocaleString()} BIO`);

        // –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏
        const firstBlock = await provider.getBlock(fromBlock24h);
        const lastBlock = await provider.getBlock(currentBlock);
        
        console.log('');
        console.log('üìÖ –í–†–ï–ú–ï–ù–ù–´–ï –†–ê–ú–ö–ò (–ü–û–°–õ–ï–î–ù–ò–ï 24 –ß–ê–°–ê):');
        console.log(`   ‚Ä¢ –ù–∞—á–∞–ª–æ: ${new Date(firstBlock.timestamp * 1000).toISOString()}`);
        console.log(`   ‚Ä¢ –ö–æ–Ω–µ—Ü: ${new Date(lastBlock.timestamp * 1000).toISOString()}`);
        console.log(`   ‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${((lastBlock.timestamp - firstBlock.timestamp) / 3600).toFixed(1)} —á–∞—Å–æ–≤`);

        // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –∞–Ω–∞–ª–∏–∑–æ–º
        console.log('');
        console.log('üîÑ –°–†–ê–í–ù–ï–ù–ò–ï –° –û–ë–©–ò–ú –¢–†–ï–ù–î–û–ú (12-14 –∞–≤–≥—É—Å—Ç–∞):');
        console.log('   –ü—Ä–µ–¥—ã–¥—É—â–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ–∫–∞–∑–∞–ª buy pressure +20.9%');
        if (netBioFlow < 0) {
            const currentBuyPressure = ((-netBioFlow / totalBioSold) * 100);
            if (currentBuyPressure > 20.9) {
                console.log('   üìà Buy pressure –£–°–ò–õ–ò–õ–û–°–¨ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞!');
            } else if (currentBuyPressure > 10) {
                console.log('   üìä Buy pressure —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –Ω–æ —Å–ª–∞–±–µ–µ –æ–±—â–µ–≥–æ —Ç—Ä–µ–Ω–¥–∞');
            } else {
                console.log('   üìâ Buy pressure –æ—Å–ª–∞–±–ª–æ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –æ–±—â–∏–º —Ç—Ä–µ–Ω–¥–æ–º');
            }
        } else if (netBioFlow > 0) {
            console.log('   üîÑ –ò–ó–ú–ï–ù–ï–ù–ò–ï –¢–†–ï–ù–î–ê: —Ç–µ–ø–µ—Ä—å –ø—Ä–µ–æ–±–ª–∞–¥–∞–µ—Ç sell pressure!');
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:', error);
    }
}

// –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
analyzeSellPressure24h();

