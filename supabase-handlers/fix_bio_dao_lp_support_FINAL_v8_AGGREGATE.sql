-- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï VIEW bio_dao_lp_support v8 - –ê–ì–†–ï–ì–ê–¶–ò–Ø –ü–û –£–ù–ò–ö–ê–õ–¨–ù–´–ú POSITION_MINT
-- –ü–†–û–ë–õ–ï–ú–ê –í v7: VIEW –Ω–µ –∞–≥—Ä–µ–≥–∏—Ä—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ–¥–Ω–æ–º –ø—É–ª–µ
-- 
-- –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: 
-- 1. –ê–≥—Ä–µ–≥–∏—Ä—É–µ–º –ø–æ–∑–∏—Ü–∏–∏ –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º position_mint (—Ä–∞–∑–Ω—ã–µ NFT)
-- 2. –°—É–º–º–∏—Ä—É–µ–º position_value_usd –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø—É–ª–∞
-- 3. SOL/BIO: 2 NFT ($62,983 + $131,289 = $194,272)

DROP VIEW IF EXISTS bio_dao_lp_support;

CREATE VIEW bio_dao_lp_support AS
WITH all_token_data AS (
  -- –ë–µ—Ä–µ–º –í–°–ï —Ç–æ–∫–µ–Ω—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ FDV (–≤–∫–ª—é—á–∞—è non-bio –ø–∞—Ä—ã)
  SELECT 
    token_symbol,
    network,
    pool_name,
    pool_address,
    token_fdv_usd,
    target_lp_value_usd,
    lp_gap_usd,
    tvl_usd,
    snapshot_timestamp,
    is_bio_pair,
    created_at,
    ROW_NUMBER() OVER (
      PARTITION BY token_symbol, network
      ORDER BY token_fdv_usd DESC, created_at DESC
    ) as rn
  FROM dao_pool_snapshots 
  WHERE 
    token_fdv_usd > 0
    AND created_at >= '2025-07-30T00:00:00Z'
),
token_max_fdv AS (
  -- –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π FDV –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
  SELECT 
    token_symbol,
    MAX(token_fdv_usd) as max_fdv
  FROM all_token_data
  WHERE rn = 1  -- –ë–µ—Ä–µ–º –ª—É—á—à–∏–µ –∑–∞–ø–∏—Å–∏ –ø–æ —Å–µ—Ç–∏
  GROUP BY token_symbol
),
bio_pairs_data AS (
  -- BIO –ø–∞—Ä—ã —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º FDV
  SELECT 
    d.token_symbol,
    d.network,
    d.pool_name,
    d.pool_address,
    COALESCE(f.max_fdv, d.token_fdv_usd) as token_fdv_usd,  -- –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –º–∞–∫—Å–∏–º—É–º
    d.target_lp_value_usd,
    d.lp_gap_usd,
    d.tvl_usd,
    d.snapshot_timestamp,
    d.is_bio_pair,
    d.created_at,
    ROW_NUMBER() OVER (
      PARTITION BY d.pool_address, d.network
      ORDER BY d.created_at DESC
    ) as rn
  FROM dao_pool_snapshots d
  LEFT JOIN token_max_fdv f ON d.token_symbol = f.token_symbol
  WHERE 
    d.token_fdv_usd > 0
    AND d.is_bio_pair = true  -- –¢–æ–ª—å–∫–æ BIO –ø–∞—Ä—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    AND d.created_at >= '2025-07-30T00:00:00Z'
    AND d.pool_name LIKE '%BIO%'
    AND d.pool_name NOT LIKE 'QBIO/SOL'
    AND d.pool_name NOT LIKE 'QBIO/WETH'
),
aggregated_positions AS (
  -- üîß –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –ê–≥—Ä–µ–≥–∏—Ä—É–µ–º –ø–æ–∑–∏—Ü–∏–∏ –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º position_mint
  SELECT 
    pool_id as pool_address,
    network,
    pool_name,
    COUNT(DISTINCT position_mint) as unique_positions_count,
    SUM(position_value_usd) as total_position_value_usd,  -- –°–£–ú–ú–ê –≤—Å–µ—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π
    MAX(created_at) as latest_created_at,
    ROW_NUMBER() OVER (
      PARTITION BY pool_id, network
      ORDER BY MAX(created_at) DESC
    ) as rn
  FROM lp_position_snapshots 
  WHERE 
    created_at >= '2025-07-30T15:00:00Z'
    AND position_value_usd > 0
    AND pool_name LIKE '%BIO%'
    AND pool_name NOT LIKE 'QBIO/SOL'
    AND pool_name NOT LIKE 'QBIO/WETH'
  GROUP BY pool_id, network, pool_name  -- –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –ø—É–ª—É –¥–ª—è –∞–≥—Ä–µ–≥–∞—Ü–∏–∏
),
final_data AS (
  -- –û–±—ä–µ–¥–∏–Ω—è–µ–º –∏ –¥–µ–¥—É–ø–ª–∏—Ü–∏—Ä—É–µ–º
  SELECT 
    d.token_symbol,
    d.network,
    d.pool_name,
    d.pool_address,
    d.token_fdv_usd,  -- –£–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π FDV
    d.target_lp_value_usd,
    d.lp_gap_usd,
    d.tvl_usd,
    d.snapshot_timestamp,
    COALESCE(p.total_position_value_usd, 0) as our_position_value_usd,  -- –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞
    COALESCE(p.unique_positions_count, 0) as positions_count,  -- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π
    ROW_NUMBER() OVER (
      PARTITION BY d.token_symbol
      ORDER BY d.token_fdv_usd DESC, COALESCE(p.total_position_value_usd, 0) DESC, d.created_at DESC
    ) as dedup_rn
  FROM bio_pairs_data d
  LEFT JOIN aggregated_positions p ON (
    d.pool_address = p.pool_address 
    AND d.network = p.network
    AND p.rn = 1
  )
  WHERE d.rn = 1
)
SELECT 
  token_symbol,
  CASE 
    WHEN network = 'ethereum' THEN 'Ethereum'
    WHEN network = 'base' THEN 'Base'  
    WHEN network = 'solana' THEN 'Solana'
    ELSE UPPER(LEFT(network, 1)) || LOWER(SUBSTRING(network, 2))
  END as network_display,
  pool_name,
  CASE 
    WHEN target_lp_value_usd > our_position_value_usd * 2 THEN 'Need to Create'
    WHEN our_position_value_usd > target_lp_value_usd * 1.5 THEN 'Excessive Liquidity (Large)'
    WHEN our_position_value_usd > target_lp_value_usd * 0.8 THEN 'Optimal Range'
    ELSE 'Under-liquified'
  END as bio_pair_status,
  token_fdv_usd,
  target_lp_value_usd,
  our_position_value_usd,  -- –¢–µ–ø–µ—Ä—å —Å–æ–¥–µ—Ä–∂–∏—Ç –°–£–ú–ú–£ –≤—Å–µ—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π
  positions_count,  -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π –≤ –ø—É–ª–µ
  lp_gap_usd,
  tvl_usd,
  snapshot_timestamp
FROM final_data
WHERE dedup_rn = 1
ORDER BY our_position_value_usd DESC, token_symbol;

-- –ö–õ–Æ–ß–ï–í–´–ï –£–õ–£–ß–®–ï–ù–ò–Ø v8:
-- 1. aggregated_positions: GROUP BY pool_id –¥–ª—è –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –ø–æ –ø—É–ª—É
-- 2. SUM(position_value_usd): —Å—É–º–º–∏—Ä—É–µ—Ç –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ position_mint
-- 3. COUNT(DISTINCT position_mint): –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π
-- 4. SOL/BIO —Ç–µ–ø–µ—Ä—å –ø–æ–∫–∞–∂–µ—Ç $194,272 –≤–º–µ—Å—Ç–æ –æ–¥–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
-- 5. positions_count: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ 