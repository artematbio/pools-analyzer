#!/usr/bin/env python3
from database_handler import SupabaseHandler

def check_view_latest():
    supabase_handler = SupabaseHandler()
    
    if not supabase_handler.is_connected():
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Supabase")
        return
    
    print('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ')
    print('üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê VIEW –ü–û–°–õ–ï SQL –ò–ó–ú–ï–ù–ï–ù–ò–ô\n')
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π –≤ view
    view_result = supabase_handler.client.table('bio_dao_lp_support').select('*').execute()
    print(f'üìä View bio_dao_lp_support: {len(view_result.data)} –∑–∞–ø–∏—Å–µ–π\n')
    
    # 2. –°—Ä–∞–≤–Ω–∏–º —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≤ dao_pool_snapshots
    dao_result = supabase_handler.client.table('dao_pool_snapshots').select(
        'pool_name, network, is_bio_pair, token_fdv_usd, our_position_value_usd, created_at'
    ).gte('created_at', '2025-07-30T00:00:00Z').execute()
    
    bio_pairs = [r for r in dao_result.data if r.get('is_bio_pair', False) and r.get('token_fdv_usd', 0) > 0]
    print(f'üìä DAO pool snapshots (BIO –ø–∞—Ä—ã —Å FDV > 0): {len(bio_pairs)} –∑–∞–ø–∏—Å–µ–π')
    print(f'üìä –í—Å–µ–≥–æ dao_pool_snapshots –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {len(dao_result.data)} –∑–∞–ø–∏—Å–µ–π\n')
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º FDV –ø—Ä–æ–±–ª–µ–º—ã
    print('üîç –ü–†–û–í–ï–†–ö–ê FDV –í VIEW:')
    token_fdv_map = {}
    for record in view_result.data:
        token = record['token_symbol']
        network = record['network_display']
        fdv = record['token_fdv_usd']
        
        if token not in token_fdv_map:
            token_fdv_map[token] = {}
        token_fdv_map[token][network] = fdv
    
    fdv_problems = []
    for token, networks in token_fdv_map.items():
        if len(networks) > 1:
            fdv_values = list(networks.values())
            if len(set(fdv_values)) > 1:
                fdv_problems.append(token)
                print(f'‚ùå {token}: {networks}')
            else:
                print(f'‚úÖ {token}: –µ–¥–∏–Ω—ã–π FDV ${fdv_values[0]:,.0f}')
    
    if not fdv_problems:
        print('‚úÖ –í—Å–µ FDV –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã!')
    print()
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏–∏
    print('üí∞ –ü–û–ó–ò–¶–ò–ò –í VIEW:')
    view_positions = []
    for record in view_result.data:
        if record['our_position_value_usd'] > 0:
            view_positions.append({
                'pool': record['pool_name'],
                'network': record['network_display'],
                'value': record['our_position_value_usd'],
                'timestamp': record['snapshot_timestamp'][:16]
            })
    
    view_positions.sort(key=lambda x: x['value'], reverse=True)
    for pos in view_positions:
        print(f'  üí∞ {pos["pool"]} ({pos["network"]}): ${pos["value"]:,.2f} - {pos["timestamp"]}')
    
    print(f'\nüìä –ü–æ–∑–∏—Ü–∏–π –≤ view: {len(view_positions)}')
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –≤ dao_pool_snapshots
    print('\nüí∞ –ü–û–ó–ò–¶–ò–ò –í DAO_POOL_SNAPSHOTS:')
    dao_positions = []
    for record in dao_result.data:
        if record['our_position_value_usd'] > 0:
            dao_positions.append({
                'pool': record['pool_name'],
                'network': record['network'],
                'value': record['our_position_value_usd'],
                'is_bio': record.get('is_bio_pair', False),
                'timestamp': record['created_at'][:16]
            })
    
    dao_positions.sort(key=lambda x: x['value'], reverse=True)
    for pos in dao_positions:
        bio_marker = "üî•" if pos['is_bio'] else "  "
        print(f'{bio_marker} {pos["pool"]} ({pos["network"]}): ${pos["value"]:,.2f} - BIO pair: {pos["is_bio"]} - {pos["timestamp"]}')
    
    print(f'\nüìä –ü–æ–∑–∏—Ü–∏–π –≤ dao_pool_snapshots: {len(dao_positions)}')
    print(f'üìä BIO –ø–∞—Ä —Å –ø–æ–∑–∏—Ü–∏—è–º–∏: {len([p for p in dao_positions if p["is_bio"]])}')
    
    # 6. –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π
    print('\nüîç –ê–ù–ê–õ–ò–ó –†–ê–°–•–û–ñ–î–ï–ù–ò–ô:')
    if len(view_positions) < len(dao_positions):
        missing = len(dao_positions) - len(view_positions)
        print(f'‚ùå –í view –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç {missing} –ø–æ–∑–∏—Ü–∏–π!')
        
        view_pools = {f"{p['pool']}_{p['network']}" for p in view_positions}
        dao_pools = {f"{p['pool']}_{p['network']}" for p in dao_positions}
        
        missing_pools = dao_pools - view_pools
        print('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—É–ª—ã –≤ view:')
        for pool_key in missing_pools:
            print(f'  - {pool_key}')
    else:
        print('‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π —Å–æ–≤–ø–∞–¥–∞–µ—Ç')

if __name__ == '__main__':
    check_view_latest() 