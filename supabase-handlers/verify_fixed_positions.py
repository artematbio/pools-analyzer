#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–∑–∏—Ü–∏—è–º–∏ –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è SQL
"""
import sys
sys.path.append('..')
from database_handler import SupabaseHandler

def verify_fixed_positions():
    supabase_handler = SupabaseHandler()
    
    if not supabase_handler.is_connected():
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Supabase")
        return
    
    print('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ')
    print('=' * 80)
    print('üîç –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–û–ó–ò–¶–ò–ô –í bio_dao_lp_support')
    print('=' * 80)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ view –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    try:
        result = supabase_handler.client.table('bio_dao_lp_support').select('*').execute()
        
        if not result.data:
            print('‚ùå VIEW –ü–£–°–¢–û–ô! SQL –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞ –≤ –ª–æ–≥–∏–∫–µ')
            return
        
        print(f'üìä –ó–∞–ø–∏—Å–µ–π –≤ view: {len(result.data)}')
        
        # –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é —Å—É–º–º—É –ø–æ–∑–∏—Ü–∏–π
        total_value = 0
        problematic_positions = []
        
        for record in result.data:
            our_positions = record['Our positions $']
            token = record['Token']
            chain = record['Chain']
            
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —á–∏—Å–ª–æ
            try:
                if isinstance(our_positions, str):
                    # –£–±–∏—Ä–∞–µ–º $ –∏ K/M
                    clean_val = our_positions.replace('$', '').replace(',', '')
                    if 'M' in clean_val:
                        numeric_val = float(clean_val.replace('M', '')) * 1000000
                    elif 'K' in clean_val:
                        numeric_val = float(clean_val.replace('K', '')) * 1000
                    else:
                        numeric_val = float(clean_val)
                else:
                    numeric_val = float(our_positions)
                
                total_value += numeric_val
                
                # –°—á–∏—Ç–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ –ø–æ–∑–∏—Ü–∏–∏ –±–æ–ª—å—à–µ $5M (—Ä–∞–Ω—å—à–µ –±—ã–ª–æ $1M)
                if numeric_val > 5000000:
                    problematic_positions.append({
                        'token': token,
                        'chain': chain,
                        'value': numeric_val,
                        'formatted': our_positions
                    })
            except Exception as e:
                print(f'‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è {token} ({chain}): {our_positions} - {e}')
        
        print(f'\nüí∞ –û–ë–©–ê–Ø –°–£–ú–ú–ê –í–°–ï–• –ü–û–ó–ò–¶–ò–ô: ${total_value:,.2f}')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        if total_value > 150000000:  # >$150M
            print(f'‚ùå –°–£–ú–ú–ê –í–°–ï –ï–©–ï –°–õ–ò–®–ö–û–ú –ë–û–õ–¨–®–ê–Ø!')
            print(f'   –û–∂–∏–¥–∞–ª–∏: ~$118M')
            print(f'   –ü–æ–ª—É—á–∏–ª–∏: ${total_value:,.2f}')
            print(f'   SQL –ù–ï –ò–°–ü–†–ê–í–ò–õ –ü–†–û–ë–õ–ï–ú–£!')
        elif total_value < 50000000:  # <$50M
            print(f'‚ùå –°–£–ú–ú–ê –°–õ–ò–®–ö–û–ú –ú–ê–õ–ï–ù–¨–ö–ê–Ø!')
            print(f'   –í–æ–∑–º–æ–∂–Ω–æ, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–ª–∏—à–∫–æ–º —Å—Ç—Ä–æ–≥–∞—è')
        else:
            print(f'‚úÖ –°–£–ú–ú–ê –í –†–ê–ó–£–ú–ù–´–• –ü–†–ï–î–ï–õ–ê–•!')
            print(f'   –û–∂–∏–¥–∞–ª–∏: ~$118M')
            print(f'   –ü–æ–ª—É—á–∏–ª–∏: ${total_value:,.2f}')
            print(f'   –ü–†–û–ë–õ–ï–ú–ê –ò–°–ü–†–ê–í–õ–ï–ù–ê! üéâ')
        
        print(f'\nüö® –ü–û–ó–ò–¶–ò–ô –ë–û–õ–¨–®–ï $5M: {len(problematic_positions)}')
        
        if problematic_positions:
            print(f'\nüìã –î–ï–¢–ê–õ–ò –ö–†–£–ü–ù–´–• –ü–û–ó–ò–¶–ò–ô:')
            for i, pos in enumerate(sorted(problematic_positions, key=lambda x: x['value'], reverse=True), 1):
                print(f'  [{i:2d}] {pos["token"]} ({pos["chain"]}): {pos["formatted"]} (${pos["value"]:,.0f})')
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        print(f'\n' + '=' * 80)
        print(f'üîç –°–†–ê–í–ù–ï–ù–ò–ï –° –ë–ê–ó–û–ô –î–ê–ù–ù–´–•')
        print(f'=' * 80)
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã
        lp_positions = supabase_handler.client.table('lp_position_snapshots').select(
            'token0_symbol, token1_symbol, position_value_usd, created_at, network'
        ).execute()
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º BIO –ø–æ–∑–∏—Ü–∏–∏
        bio_positions = [
            pos for pos in lp_positions.data 
            if (pos['token0_symbol'] == 'BIO' or pos['token1_symbol'] == 'BIO') 
            and pos['position_value_usd'] > 0
        ]
        
        db_total_value = sum(pos['position_value_usd'] for pos in bio_positions)
        
        print(f'   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (–≤—Å–µ —Å–Ω–∞–ø—à–æ—Ç—ã): ${db_total_value:,.2f}')
        print(f'   VIEW (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π): ${total_value:,.2f}')
        
        difference = abs(total_value - db_total_value)
        percentage = (difference / db_total_value) * 100 if db_total_value > 0 else 0
        
        print(f'   –†–∞–∑–Ω–∏—Ü–∞: ${difference:,.2f} ({percentage:.1f}%)')
        
        if percentage < 5:
            print(f'‚úÖ –û–¢–õ–ò–ß–ù–ê–Ø –†–ê–ë–û–¢–ê! –†–∞–∑–Ω–∏—Ü–∞ –º–µ–Ω–µ–µ 5%')
        elif percentage < 15:
            print(f'‚ö†Ô∏è  –ù–µ–ø–ª–æ—Ö–æ, –Ω–æ –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–∏–µ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è')
        else:
            print(f'‚ùå –°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è —Ä–∞–∑–Ω–∏—Ü–∞! –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É')
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
        print(f'\nüéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –û–¶–ï–ù–ö–ê:')
        if total_value <= 150000000 and percentage < 15:
            print(f'‚úÖ –ü–†–û–ë–õ–ï–ú–ê –ò–°–ü–†–ê–í–õ–ï–ù–ê!')
            print(f'   - –ü–æ–∑–∏—Ü–∏–∏ –±–æ–ª—å—à–µ –Ω–µ –¥—É–±–ª–∏—Ä—É—é—Ç—Å—è')
            print(f'   - –°—É–º–º—ã –≤ —Ä–∞–∑—É–º–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö')
            print(f'   - View —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
        else:
            print(f'‚ùå –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –†–ê–ë–û–¢–ê')
            print(f'   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–∫—É –∞–≥—Ä–µ–≥–∞—Ü–∏–∏')
            print(f'   - –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è')
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ view: {e}')

if __name__ == '__main__':
    verify_fixed_positions()
