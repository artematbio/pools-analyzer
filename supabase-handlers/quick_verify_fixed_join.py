#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∂–æ–∏–Ω–∞ –≤ bio_dao_lp_support view
"""
import sys
sys.path.append('..')
from database_handler import SupabaseHandler

def quick_verify_fixed_join():
    supabase_handler = SupabaseHandler()
    
    if not supabase_handler.is_connected():
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Supabase")
        return
    
    print('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ')
    print('=' * 60)
    print('üîç –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –î–ñ–û–ò–ù–ê')
    print('=' * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ —Å –ø–æ–∑–∏—Ü–∏—è–º–∏
    result = supabase_handler.client.table('bio_dao_lp_support').select('*').execute()
    
    print(f'üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ view: {len(result.data)}')
    
    # –°—á–∏—Ç–∞–µ–º –∑–∞–ø–∏—Å–∏ —Å –ø–æ–∑–∏—Ü–∏—è–º–∏ > $0
    positions_with_value = []
    total_value = 0
    
    for record in result.data:
        our_positions = record['Our positions $']
        token = record['Token']
        chain = record['Chain']
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —á–∏—Å–ª–æ
        try:
            if isinstance(our_positions, str):
                # –£–±–∏—Ä–∞–µ–º $ –∏ K/M
                clean_val = our_positions.replace('$', '').replace(',', '')
                if 'M' in clean_val:
                    numeric_val = float(clean_val.replace('M', '')) * 1000000
                elif 'K' in clean_val:
                    numeric_val = float(clean_val.replace('K', '')) * 1000
                else:
                    numeric_val = float(clean_val)
            else:
                numeric_val = float(our_positions)
            
            if numeric_val > 0:
                positions_with_value.append({
                    'token': token,
                    'chain': chain,
                    'value': numeric_val,
                    'formatted': our_positions
                })
                total_value += numeric_val
        except:
            pass
    
    print(f'üí∞ –ü–æ–∑–∏—Ü–∏–π —Å —Å—É–º–º–æ–π > $0: {len(positions_with_value)}')
    print(f'üí∞ –û–±—â–∞—è —Å—É–º–º–∞ –ø–æ–∑–∏—Ü–∏–π: ${total_value:,.2f}')
    
    if len(positions_with_value) > 15:
        print(f'‚úÖ –û–¢–õ–ò–ß–ù–û! –î–∂–æ–∏–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç - –Ω–∞–π–¥–µ–Ω–æ {len(positions_with_value)} –ø–æ–∑–∏—Ü–∏–π')
        print(f'   –ë—ã–ª–æ: 3 –ø–æ–∑–∏—Ü–∏–∏ (VITA, SPINE, MYCO)')
        print(f'   –°—Ç–∞–ª–æ: {len(positions_with_value)} –ø–æ–∑–∏—Ü–∏–π')
        print(f'   –£–ª—É—á—à–µ–Ω–∏–µ –≤ {len(positions_with_value)/3:.1f} —Ä–∞–∑!')
    elif len(positions_with_value) > 10:
        print(f'‚ö†Ô∏è  –•–æ—Ä–æ—à–æ, –Ω–æ –º–æ–∂–Ω–æ –ª—É—á—à–µ: {len(positions_with_value)} –ø–æ–∑–∏—Ü–∏–π')
    elif len(positions_with_value) > 5:
        print(f'‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ: {len(positions_with_value)} –ø–æ–∑–∏—Ü–∏–π')
    else:
        print(f'‚ùå –î–ñ–û–ò–ù –í–°–ï –ï–©–ï –ù–ï –†–ê–ë–û–¢–ê–ï–¢: —Ç–æ–ª—å–∫–æ {len(positions_with_value)} –ø–æ–∑–∏—Ü–∏–π')
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-10 –ø–æ–∑–∏—Ü–∏–π
    if positions_with_value:
        print(f'\nüìã –¢–û–ü –ü–û–ó–ò–¶–ò–ò:')
        sorted_positions = sorted(positions_with_value, key=lambda x: x['value'], reverse=True)
        for i, pos in enumerate(sorted_positions[:10], 1):
            print(f'  [{i:2d}] {pos["token"]} ({pos["chain"]}): {pos["formatted"]}')
        
        if len(sorted_positions) > 10:
            print(f'       ... –∏ –µ—â–µ {len(sorted_positions) - 10} –ø–æ–∑–∏—Ü–∏–π')
    
    # –û—Ü–µ–Ω–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    print(f'\nüéØ –û–¶–ï–ù–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:')
    if len(positions_with_value) >= 15:
        print(f'‚úÖ –î–ñ–û–ò–ù –ü–û pool_name –†–ê–ë–û–¢–ê–ï–¢ –ò–î–ï–ê–õ–¨–ù–û!')
        print(f'   - –ü–æ–∑–∏—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Ç–æ–∫–µ–Ω–æ–≤')
        print(f'   - –°—É–º–º—ã –≤ —Ä–∞–∑—É–º–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö')
        print(f'   - View –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é')
    elif len(positions_with_value) >= 10:
        print(f'‚úÖ –î–ñ–û–ò–ù –†–ê–ë–û–¢–ê–ï–¢ –•–û–†–û–®–û!')
        print(f'   - –°—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ')
        print(f'   - –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π –Ω–∞–π–¥–µ–Ω–æ')
    else:
        print(f'‚ùå –î–ñ–û–ò–ù –í–°–ï –ï–©–ï –ü–†–û–ë–õ–ï–ú–ê–¢–ò–ß–ï–ù')
        print(f'   - –ù—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞')
        print(f'   - –í–æ–∑–º–æ–∂–Ω—ã –¥—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ SQL')

if __name__ == '__main__':
    quick_verify_fixed_join()
